class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int n=nums.size();
        int prefixsum[n];
        int ans=0;
        prefixsum[0]=nums[0];
        for(int i=1;i<n;i++){
            prefixsum[i]=nums[i]+prefixsum[i-1];
        }
        unordered_map<int, int> mpp;
        for(int i=0;i<n;i++){
            if(prefixsum[i]==k){
                ans++;
            }
            if(mpp.find(prefixsum[i]-k)!=mpp.end()){
                ans+=mpp[prefixsum[i]-k];
            }
            mpp[prefixsum[i]]++;
        }
        return ans;
    }
};
