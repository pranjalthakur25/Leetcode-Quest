/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int diameterOfBinaryTree(TreeNode* root) {
        if(root==NULL){
            return 0;
        }
        int maxDai=0;
        Max_Daimeter(root, maxDai);
        return maxDai;
    }
    int Max_Daimeter(TreeNode*root, int& maxDai ){
        if(root==NULL){
            return 0;
        }
        int left=Max_Daimeter(root->left, maxDai);
        int right=Max_Daimeter(root->right, maxDai);
        maxDai=max(maxDai, right+left);
        return max(left, right)+1;
    }
};
